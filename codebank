Import Data
> **--1. Check full dataset, column names and datatypes**

Select * from NashvilleHousing

**--2  Standardize Date Format**
select SaleDate, convert( Date, SaleDate)
from NashvilleHousing

Update NashvilleHousing
Set SaleDate = convert( Date, SaleDate)

Alter table NashvilleHousing
Add SalesDateConverted Date

Update NashvilleHousing
Set SalesDateConverted=convert( Date, SaleDate)

**--3. Check for nulls**
select * 
from NashvilleHousing
where PropertyAddress is null

--  Run the same table against eachother
Select a.ParcelID, a. PropertyAddress, b.ParcelID, b. PropertyAddress,isnull(a.PropertyAddress, b.PropertyAddress)
from NashvilleHousing a
join NashvilleHousing b 
on a.ParcelID=b.ParcelID
and a.[UniqueID ]<>b.[UniqueID ]
Where a.PropertyAddress is null

**--4 Update the main table**
Update a
Set PropertyAddress = ISNULL (a.PropertyAddress, b.PropertyAddress)
from NashvilleHousing a
join NashvilleHousing b 
on a.ParcelID=b.ParcelID
and a.[UniqueID ]<>b.[UniqueID ]
Where a.PropertyAddress is null

**--5. Split PropertyAddress column into 3 columns(Address, City,State)**

Select OwnerAddress from NashvilleHousing

Select PARSENAME(REPLACE(OwnerAddress,',','.'),3),
PARSENAME(REPLACE(OwnerAddress,',','.'),2),
PARSENAME(REPLACE(OwnerAddress,',','.'),1)
From NashvilleHousing

--Add new column 1
Alter table nashvillehousing
Add OwnerSplitAddress nvarchar(255)

--Add new column 2
Alter table nashvillehousing
Add OwnerSplitCity nvarchar(255)

--Add new column 3
Alter table nashvillehousing
Add OwnerSplitState nvarchar(255)

--Update values 
Update NashvilleHousing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)

--Update values 
Update NashvilleHousing
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)

--Update values 
Update NashvilleHousing
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)

--Confirm Updates
select * from NashvilleHousing

**--6  Change Y and N to Yes and No in "Sold as Vacant" field**
select distinct(SoldAsVacant)
from NashvilleHousing

Select SoldAsVacant,
Case when SoldAsVacant ='N' Then 'No'
     when SoldAsVacant ='Y' Then 'Yes'
Else SoldAsVacant
End
from NashvilleHousing

Update NashvilleHousing
Set SoldAsVacant=Case when SoldAsVacant ='N' Then 'No'
                      when SoldAsVacant ='Y' Then 'Yes'
Else SoldAsVacant
End

**--7 Remove Duplicates**
With RowNumCTE AS 
(select *, ROW_NUMBER()OVER(
PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
ORDER BY UniqueID) row_num
from NashvilleHousing)
--Order by ParcelID
Select *
from RowNumCTE
Where row_num>1
Order by PropertyAddress


**-- 8. Delete unwanted Columns**

ALTER TABLE NashvilleHousing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate 

**-- 9 Check to confirm a cleaned table**
Select *
From NashvilleHousing
